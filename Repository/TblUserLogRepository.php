<?php

namespace Orca\UserLogBundle\Repository;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * TblUserLogRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */


class TblUserLogRepository extends \Doctrine\ORM\EntityRepository
{
    public function getNbConnexionByTypeTerminal($month, $year)
    {
        $query = $this->_em->createQueryBuilder()
            ->select('COUNT(u.id) as ct, u.terminalType')
            ->from('OrcaUserLogBundle:TblUserLog','u')
            ->where('u.action = :var')
            ->andWhere("DATE_FORMAT(u.date, '%m') = :month")
            ->andWhere("DATE_FORMAT(u.date, '%Y') = :year")
            ->groupBy('u.terminalType')
            ->setParameters(['var'=>'Login_BO', 'month'=>$month, 'year'=>$year ])
            ->getQuery()
            ->getResult()
        ;

        return $query;
    }

    public function getNbConexionByTerminal($month, $year)
    {
        $query = $this->_em->createQueryBuilder()
            ->select('COUNT(u.id) as ct, u.terminal')
            ->from('OrcaUserLogBundle:TblUserLog','u')
            ->where('u.action = :var')
            ->andWhere("DATE_FORMAT(u.date, '%m') = :month")
            ->andWhere("DATE_FORMAT(u.date, '%Y') = :year")
            ->groupBy('u.terminal')
            ->setParameters(['var'=>'Login_BO', 'month'=>$month, 'year'=>$year ])
            ->getQuery()
            ->getResult()
        ;

        return $query;
    }

    public function getNbConnexionByDay($day, $month, $year)
    {
        $query = $this->_em->createQueryBuilder()
            ->select('COUNT(u.id) as ct')
            ->from('OrcaUserLogBundle:TblUserLog','u')
            ->where('u.action = :var')
            ->andWhere("DATE_FORMAT(u.date, '%d') = :day")
            ->andWhere("DATE_FORMAT(u.date, '%m') = :month")
            ->andWhere("DATE_FORMAT(u.date, '%Y') = :year")
            ->setParameters(['var' => 'Login_BO', 'day' => $day, 'month' => $month, 'year' => $year])
            ->getQuery()
            ->getResult()
        ;

        return $query;
    }

    public function getNbErrorByDay($day, $month, $year)
    {
        $query = $this->_em->createQueryBuilder()
            ->select('COUNT(u.id) as ct')
            ->from('OrcaUserLogBundle:TblUserLog','u')
            ->where('u.errorCode != 200')
            ->andWhere('u.errorCode != 302')
            ->andWhere("DATE_FORMAT(u.date, '%d') = :day")
            ->andWhere("DATE_FORMAT(u.date, '%m') = :month")
            ->andWhere("DATE_FORMAT(u.date, '%Y') = :year")
            ->setParameters(['day' => $day, 'month' => $month, 'year' => $year])
            ->getQuery()
            ->getResult()
        ;

        return $query;
    }

    public function getNbConnexionByMonth($month, $year)
    {
        $query = $this->_em->createQueryBuilder()
            ->select('COUNT(u.id) as ct')
            ->from('OrcaUserLogBundle:TblUserLog','u')
            ->where('u.action = :var')
            ->andWhere("DATE_FORMAT(u.date, '%m') = :month")
            ->andWhere("DATE_FORMAT(u.date, '%Y') = :year")
            ->setParameters(['var' => 'Login_BO', 'month' => $month, 'year' => $year])
            ->getQuery()
            ->getResult()
        ;

        return $query;
    }

    public function getNbErrorsByMonth($month, $year)
    {
        $query = $this->_em->createQueryBuilder()
            ->select('COUNT(u.id) as ct')
            ->from('OrcaUserLogBundle:TblUserLog','u')
            ->where('u.errorCode != 200')
            ->andWhere('u.errorCode != 302')
            ->andWhere("DATE_FORMAT(u.date, '%m') = :month")
            ->andWhere("DATE_FORMAT(u.date, '%Y') = :year")
            ->setParameters(['month' => $month, 'year' => $year])
            ->getQuery()
            ->getResult()
        ;

        return $query;
    }

    public function getMonths($year)
    {
        $query = $this->_em->createQueryBuilder()
            ->select("DISTINCT (DATE_FORMAT(u.date, '%m')) as mois")
            ->from('OrcaUserLogBundle:TblUserLog','u')
            ->where("DATE_FORMAT(u.date, '%Y') = :year")
            ->setParameter('year', $year)
            ->getQuery()
            ->getResult()
        ;

        return $query;
    }

    public function getNbConnexionByTerminalAndByMonth($year)
    {
        /* $query = $this->_em->createQuery(
             "SELECT terminal, GROUP_CONCAT('nb') AS nb FROM SELECT DISTINCT u.terminal, DATE_FORMAT(u.date, '%m') AS mois, COUNT(u.action) AS nb FROM OrcaUserLogBundle:TblUserLog u WHERE u.action = Login_BO AND DATE_FORMAT(u.date, '%Y') = 2017 GROUP BY u.terminal, DATE_FORMAT(u.date, '%m') tab GROUP BY tab.terminal"
             )
         ;*/

/*        $subquery = $this->_em->createQueryBuilder()
            ->select("DISTINCT u.terminal, DATE_FORMAT(u.date, '%m') AS mois, COUNT(u.action) AS nb")
            ->from('OrcaUserLogBundle:TblUserLog','u')
            ->where("u.action = 'Login_BO'")
            ->andWhere("DATE_FORMAT(u.date, '%Y') = 2017")
            ->groupBy( "mois, u.terminal")
            ->getDQL()
        ;

        $query = $this->_em->createQueryBuilder()
            ->select("terminal, GROUP_CONCAT('nb') as nb")
            ->from('('.$subquery.')','tab')
//            ->addSelect('('.$subquery.') as tab')
            ->groupBy('tab.terminal')
            ->getQuery()
            ->getResult()
        ;*/

        $sql = "SELECT terminal, GROUP_CONCAT(nb) AS nb
                FROM(
                SELECT DISTINCT u.`terminal`,DATE_FORMAT(u.`date`, \"%m\") AS mois, COUNT(u.action) AS nb
                FROM `tbl_user_log` u 
                WHERE u.`action` = :var
                AND DATE_FORMAT(u.`date`, \"%Y\") = :year
                GROUP BY u.`terminal`, DATE_FORMAT(u.`date`, \"%m\")
                ) tab
                GROUP BY tab.terminal"
        ;
        $rsm = new ResultSetMapping();
        $rsm->addScalarResult('terminal','terminal');
        $rsm->addScalarResult('nb','nb');
        $query = $this->_em->createNativeQuery($sql, $rsm)
            ->setParameters(['var' => 'Login_BO', 'year' => $year])
        ;

        return $query->getResult();
    }

    public function getConnexions($mois)
    {
        $sql = "SELECT l.`user_id`, COUNT(*) AS nb_connexion, 
                COUNT(
                    (CASE WHEN l.`error_code` NOT IN (200,302) THEN 1 ELSE NULL END)
                ) AS nb_erreur,
                MAX(l.date) AS last_conn, GROUP_CONCAT( DISTINCT l.`terminal`) AS terminals
                
                FROM `tbl_user_log` l 
                WHERE l.`action` = 'Login_BO'
                AND DATE_FORMAT(l.`date`, \"%m\") = :mois
                GROUP BY l.`user_id`
                ORDER BY nb_connexion DESC"
        ;

        $rsm = new ResultSetMapping();
        $rsm->addScalarResult('user_id', 'user');
        $rsm->addScalarResult('nb_connexion', 'nb_con');
        $rsm->addScalarResult('nb_erreur', 'nb_err');
        $rsm->addScalarResult('last_conn', 'last_conn');
        $rsm->addScalarResult('terminals', 'ters');
        $query = $this->_em->createNativeQuery($sql, $rsm)
            ->setParameter('mois', $mois)
        ;

        return $query->getResult();
    }

    public function getErrors()
    {
        $query = $this->_em->createQueryBuilder()
            ->select('l.date','l.action','l.uri','l.terminalType','l.ville','l.user','l.errorCode')
            ->from('OrcaUserLogBundle:TblUserLog','l')
            ->where('l.errorCode not in (200,302)')
            ->orderBy('l.date ','DESC')
            ->getQuery()
            ->getResult()
        ;

        return $query;
    }
}
